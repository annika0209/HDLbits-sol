module top_module(
    input clk,
    input reset,    // Synchronous reset to OFF
    input j,
    input k,
    output out); //  
	// DFF	uDFF(.clk(clk),	.rst(areset), .D(), .Q(out));
	localparam OFF = 0;
	localparam ON  = 1;
	reg 	state;
	reg 	next_state;

    always @(*) begin    // This is a combinational always block
        casex (state)
			OFF		:	next_state = j ? ON		: OFF	;	
			ON		: 	next_state = k ? OFF	: ON	;
			default	: 	next_state = OFF;
		endcase	// State transition logic
    end

    always @(posedge clk) begin    // This is a sequential always block
        // State flip-flops with synchronous reset
		if (reset) begin
			state <= OFF;
		end else begin
			state <= next_state;
		end
	end

    // Output logic
    assign out = (state == ON);

endmodule